import pandas as pd
df = pd.read_csv(r"spam(Naive).csv")
df.head()

df.groupby('Category').describe()

df['spam']=df['Category'].apply(lambda x: 1 if x=='spam' else 0)
df.head()

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df.Message,df.spam)
from sklearn.feature_extraction.text import CountVectorizer
v = CountVectorizer()
X_train_count = v.fit_transform(X_train.values)
X_train_count.toarray()[:2]

from sklearn.naive_bayes import MultinomialNB
model = MultinomialNB()
model.fit(X_train_count,y_train)

emails = [
 'Hey mohan, can we get together to watch footbal game tomorrow?',
 'Upto 20% discount on parking, exclusive offer just for you. Dont miss t'
]
emails_count = v.transform(emails)
model.predict(emails_count)

X_test_count = v.transform(X_test)
model.score(X_test_count, y_test)

from sklearn.pipeline import Pipeline
clf = Pipeline([
 ('vectorizer', CountVectorizer()),
 ('nb', MultinomialNB())
])

clf.fit(X_train, y_train)

clf.score(X_test,y_test)

clf.predict(emails)

import matplotlib.pyplot as plt
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()
X = iris.data  # Features
y = iris.target  # Target variable (species)

# Get the feature names
feature_names = iris.feature_names

# Create a scatter plot
plt.figure(figsize=(8, 6))  # Set figure size

# Plot sepal length vs. sepal width
plt.scatter(X[y == 0, 0], X[y == 0, 1], color='red', label='Setosa')
plt.scatter(X[y == 1, 0], X[y == 1, 1], color='blue', label='Versicolor')
plt.scatter(X[y == 2, 0], X[y == 2, 1], color='green', label='Virginica')

# Set labels and title
plt.xlabel(feature_names[0])
plt.ylabel(feature_names[1])
plt.title('Iris Dataset Scatter Plot')

# Add legend
plt.legend()

# Show the plot
plt.show()
